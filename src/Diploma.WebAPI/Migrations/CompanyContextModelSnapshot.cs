// <auto-generated />

using System;
using Diploma.WebAPI.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace Diploma.WebAPI.Migrations
{
    [DbContext(typeof(CompanyContext))]
    internal class CompanyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity(
                "Diploma.WebAPI.Infrastructure.Entities.ProjectEntity",
                b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CustomerId");

                    b.Property<DateTime>("DeadlineDate");

                    b.Property<decimal>("Foreit");

                    b.Property<int>("ManagerId");

                    b.Property<int>("NumberOfMilestones");

                    b.Property<decimal>("PricePerHour");

                    b.Property<string>("ProjectType")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ManagerId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity(
                "Diploma.WebAPI.Infrastructure.Entities.ProjectTeamEntity",
                b =>
                {
                    b.Property<int>("ProjectId");

                    b.Property<int>("TeamId");

                    b.HasKey("ProjectId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("ProjectTeams");
                });

            modelBuilder.Entity(
                "Diploma.WebAPI.Infrastructure.Entities.TeamEntity",
                b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity(
                "Diploma.WebAPI.Infrastructure.Entities.TeamMemberEntity",
                b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ProgrammerId");

                    b.Property<int>("TeamId");

                    b.Property<string>("TeamRole")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ProgrammerId");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity(
                "Diploma.WebAPI.Infrastructure.Entities.UserEntity",
                b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("BirthDate");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<int>("Gender");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("MiddleName");

                    b.Property<string>("PasswordHash")
                        .IsRequired();

                    b.Property<string>("Role")
                        .IsRequired();

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Role")
                        .HasValue("UserEntity");
                });

            modelBuilder.Entity(
                "Diploma.WebAPI.Infrastructure.Entities.AdminEntity",
                b =>
                {
                    b.HasBaseType("Diploma.WebAPI.Infrastructure.Entities.UserEntity");

                    b.ToTable("AdminEntity");

                    b.HasDiscriminator()
                        .HasValue("Admin");
                });

            modelBuilder.Entity(
                "Diploma.WebAPI.Infrastructure.Entities.CustomerEntity",
                b =>
                {
                    b.HasBaseType("Diploma.WebAPI.Infrastructure.Entities.UserEntity");

                    b.ToTable("Customers");

                    b.HasDiscriminator()
                        .HasValue("Customer");
                });

            modelBuilder.Entity(
                "Diploma.WebAPI.Infrastructure.Entities.EmployeeEntity",
                b =>
                {
                    b.HasBaseType("Diploma.WebAPI.Infrastructure.Entities.UserEntity");

                    b.Property<decimal>("Salary");

                    b.ToTable("EmployeeEntity");

                    b.HasDiscriminator()
                        .HasValue("EmployeeEntity");
                });

            modelBuilder.Entity(
                "Diploma.WebAPI.Infrastructure.Entities.ManagerEntity",
                b =>
                {
                    b.HasBaseType("Diploma.WebAPI.Infrastructure.Entities.EmployeeEntity");

                    b.ToTable("ManagerEntity");

                    b.HasDiscriminator()
                        .HasValue("Manager");
                });

            modelBuilder.Entity(
                "Diploma.WebAPI.Infrastructure.Entities.ProgrammerEntity",
                b =>
                {
                    b.HasBaseType("Diploma.WebAPI.Infrastructure.Entities.EmployeeEntity");

                    b.ToTable("ProgrammerEntity");

                    b.HasDiscriminator()
                        .HasValue("Programmer");
                });

            modelBuilder.Entity(
                "Diploma.WebAPI.Infrastructure.Entities.ProjectEntity",
                b =>
                {
                    b.HasOne("Diploma.WebAPI.Infrastructure.Entities.CustomerEntity", "Customer")
                        .WithMany("Projects")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Diploma.WebAPI.Infrastructure.Entities.ManagerEntity", "Manager")
                        .WithMany("ManagedProjects")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity(
                "Diploma.WebAPI.Infrastructure.Entities.ProjectTeamEntity",
                b =>
                {
                    b.HasOne("Diploma.WebAPI.Infrastructure.Entities.ProjectEntity", "Project")
                        .WithMany("InvolvedTeams")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Diploma.WebAPI.Infrastructure.Entities.TeamEntity", "Team")
                        .WithMany("WorkingProjects")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity(
                "Diploma.WebAPI.Infrastructure.Entities.TeamMemberEntity",
                b =>
                {
                    b.HasOne("Diploma.WebAPI.Infrastructure.Entities.ProgrammerEntity", "Programmer")
                        .WithMany("TeamsMemberships")
                        .HasForeignKey("ProgrammerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Diploma.WebAPI.Infrastructure.Entities.TeamEntity", "Team")
                        .WithMany("InvolvedMembers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
